// Code generated by goctl. DO NOT EDIT.
// Source: talentrpc.proto

package talent

import (
	"context"
	__ "ginAdminServer/remoterpc/talentrpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetMenuTreeReq  = __.GetMenuTreeReq
	GetMenuTreeResp = __.GetMenuTreeResp
	RegisterReq     = __.RegisterReq
	RegisterResp    = __.RegisterResp

	Talent interface {
		RegisterAdminUser(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error)
		GetMenuFromAdminId(ctx context.Context, in *GetMenuTreeReq, opts ...grpc.CallOption) (*GetMenuTreeResp, error)
	}

	defaultTalent struct {
		cli zrpc.Client
	}
)

func NewTalent(cli zrpc.Client) Talent {
	return &defaultTalent{
		cli: cli,
	}
}

func (m *defaultTalent) RegisterAdminUser(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error) {
	client := __.NewTalentClient(m.cli.Conn())
	return client.RegisterAdminUser(ctx, in, opts...)
}

func (m *defaultTalent) GetMenuFromAdminId(ctx context.Context, in *GetMenuTreeReq, opts ...grpc.CallOption) (*GetMenuTreeResp, error) {
	client := __.NewTalentClient(m.cli.Conn())
	return client.GetMenuFromAdminId(ctx, in, opts...)
}
